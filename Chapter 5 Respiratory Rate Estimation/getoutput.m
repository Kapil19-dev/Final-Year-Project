%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% MATLAB codes for Final Year Project
% Respiratory Rate Estimation : Output
% Written by Galada Aditya
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Clear the Workspace
close all
clear
clc

%% Load the inptut files
ifile='input_file.mat';
fs=300;

%% Run the respiratory rate algorithms
% Obtain RR from direct measurement
getbaseline(ifile,25);

% Estimate RR using Autoregressive model
getRRAR(ifile,300);

% Estimate RR using PSD model
getRRPSD(ifile,300);

% Estimare RR using Instantaneous Frequency Model
getRRIF(ifile,300);

% close the figure generated by previous methods
close all

%% Load the results
tmp=load('RR_if');
RR_if=tmp.RR_if;

tmp=load('RR_psd');
RR_psd=tmp.RR_psd;

tmp=load('RR_ar');
RR_ar=tmp.RR_ar;

tmp=load('RR_baseline');
RR_baseline_pos=tmp.RR_baseline_pos;
RR_baseline=tmp.RR_baseline;

%% Plot the results
figure
hold on

% Plot the RR from direct measurement
plot(266*RR_baseline_pos(1:end-1)./RR_baseline_pos(end),smooth(RR_baseline),'linewidth',2)

% Plot the RR from Instantaneous Frequency Tracking
plot(266*[1/numel(RR_if):1/numel(RR_if):1],smooth(RR_if,100),'linewidth',1.5)

% Plot the RR from Auto Regressive model
plot(266*[1/numel(RR_ar):1/numel(RR_ar):1],RR_ar)

% Plot the RR from PSD method
plot(266*[1/numel(RR_psd):1/numel(RR_psd):1],smooth(RR_psd,20))

title('Respiratory Rate')
xlabel('Time (s)')
ylabel('Breaths per minute')
xlim([50 250])
ylim([7 30])
hold off

%% Obtain the RR estimate for each second
test_pts=round(266*RR_baseline_pos(1:end-1)./RR_baseline_pos(end));
test_pts(test_pts>250)=[];
test_pts(test_pts<50)=[];

y_bs=smooth(RR_baseline);
y_bs=y_bs(14:82);

y_if=resample(smooth(RR_if,100),266,numel(smooth(RR_if,100)))';
y_ar=resample(RR_ar,266,numel(RR_ar));
y_psd=resample(smooth(RR_psd,20),266,numel(smooth(RR_psd,20)))';
y_baseline=interp1(RR_baseline_pos(1:end-1)/30,smooth(RR_baseline),1:266,'spline');

%% Compute the Mean Average Error for each second
for i=1:numel(test_pts)
    MAE_if(i)=abs(y_if(test_pts(i))-y_bs(i));
    MAE_psd(i)=abs(y_psd(test_pts(i))-y_bs(i));
    MAE_ar(i)=abs(y_ar(test_pts(i))-y_bs(i));
end
if_err=sum(MAE_if)/numel(test_pts)
psd_err=sum(MAE_psd)/numel(test_pts)
ar_err=sum(MAE_ar)/numel(test_pts)

